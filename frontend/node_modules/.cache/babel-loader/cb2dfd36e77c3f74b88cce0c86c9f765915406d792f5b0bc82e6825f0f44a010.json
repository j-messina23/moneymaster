{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jimmy\\\\Documents\\\\UCF\\\\SPRING_2024\\\\COP4331\\\\moneymaster\\\\frontend\\\\src\\\\components\\\\ForgotPw.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForgotPw() {\n  _s();\n  const app_name = 'moneymaster22-267f3a958fc3';\n  function buildPath(route) {\n    if (process.env.NODE_ENV === 'production') {\n      return 'https://' + app_name + '.herokuapp.com/' + route;\n    } else {\n      return 'http://localhost:5000/' + route;\n    }\n  }\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n\n  // regular expression to validate email format\n  const isValidEmailFormat = email => {\n    const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    return regex.test(email);\n  };\n\n  // handles email submission\n  const submitText = async () => {\n    if (isValidEmailFormat(email)) {\n      try {\n        const responses = await fetch(buildPath('api/searchUsers'), {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            SearchKey: email\n          })\n        });\n        const users = await responses.json();\n\n        // check if any user matches the email\n        if (users.length > 0) {\n          // user found, attempt to send a verification code via email\n\n          const emailResponse = await fetch(buildPath('api/forgotPasswordEmail'), {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              email: email\n            })\n          });\n          const emailData = await emailResponse.json();\n          if (emailResponse.ok) {\n            console.log(\"Verification email sent.\");\n            setMessage('Verification code has been sent to your email.');\n          } else {\n            console.log(\"Failed to send verification email\", emailData.message);\n            setMessage('Failed to send verification code. Please try again later.');\n          }\n        } else {\n          // no user found with email\n          console.log(\"in else\");\n          setMessage('No account found with that email. Please try again.');\n        }\n      } catch (error) {\n        console.log(\"ERROR:\", error);\n        setMessage('An error occurred. Please try again later.');\n      }\n      // reset input\n      setEmail('');\n    } else {\n      // invalid email message\n      setMessage('Invalid email format. Please enter a valid email address.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-screen bg-teal-800 flex flex-col items-center justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"logo.png\",\n        alt: \"Logo\",\n        className: \"w-28 h-28\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-white text-7xl font-extrabold ml-2 uppercase leading-tight\",\n        children: \"Money Master\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-md mt-8 px-8 py-6 rounded-lg border-2 border-white flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-white font-bold text-3xl uppercase mb-6\",\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white mb-6\",\n        children: \"Enter your email, and we'll send you a verification code you can use to get back in your account.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"verificationCode\",\n        className: \"w-full mb-4 px-3 py-2 bg-transparent text-white border border-white rounded focus:outline-none focus:border-gray-300\",\n        placeholder: \"Enter email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitText,\n        className: \"w-full bg-white text-teal-800 font-semibold py-2 px-4 rounded hover:bg-gray-200 mb-4\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mt-4 py-2 px-6 ${message.startsWith('No account') || message.startsWith('Invalid email') ? 'bg-red-100 text-red-700' : 'bg-green-100 text-green-700'} rounded border`,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white mt-6\",\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            window.location.href = \"/register\";\n          },\n          className: \"text-white underline font-semibold\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 71\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(ForgotPw, \"mxdRTHxkiTeLOv2akPbesFCh75U=\");\n_c = ForgotPw;\nexport default ForgotPw;\nvar _c;\n$RefreshReg$(_c, \"ForgotPw\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ForgotPw","_s","app_name","buildPath","route","process","env","NODE_ENV","email","setEmail","message","setMessage","isValidEmailFormat","regex","test","submitText","responses","fetch","method","headers","body","JSON","stringify","SearchKey","users","json","length","emailResponse","emailData","ok","console","log","error","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","value","onChange","e","target","onClick","startsWith","window","location","href","_c","$RefreshReg$"],"sources":["C:/Users/jimmy/Documents/UCF/SPRING_2024/COP4331/moneymaster/frontend/src/components/ForgotPw.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction ForgotPw() {\r\n    const app_name = 'moneymaster22-267f3a958fc3'\r\n    function buildPath(route) {\r\n        if (process.env.NODE_ENV === 'production') {\r\n            return 'https://' + app_name + '.herokuapp.com/' + route;\r\n        }\r\n        else {\r\n            return 'http://localhost:5000/' + route;\r\n        }\r\n    }\r\n    const [email, setEmail] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    // regular expression to validate email format\r\n    const isValidEmailFormat = (email) => {\r\n        const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n        return regex.test(email);\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // handles email submission\r\n    const submitText = async () => {\r\n        if (isValidEmailFormat(email)) {\r\n            try {\r\n                const responses = await fetch(buildPath('api/searchUsers'), {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ SearchKey: email }),\r\n                });\r\n    \r\n                const users = await responses.json();\r\n                \r\n                // check if any user matches the email\r\n                if (users.length > 0) {\r\n                    // user found, attempt to send a verification code via email\r\n\r\n\r\n\r\n                    const emailResponse = await fetch(buildPath('api/forgotPasswordEmail'), { \r\n                        method: 'POST',\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        body: JSON.stringify({ email: email }),\r\n                    \r\n                    });\r\n\r\n\r\n    \r\n                    const emailData = await emailResponse.json();\r\n                    if (emailResponse.ok) {\r\n                        console.log(\"Verification email sent.\");\r\n                        setMessage('Verification code has been sent to your email.');\r\n                    } else {\r\n                        console.log(\"Failed to send verification email\", emailData.message);\r\n                        setMessage('Failed to send verification code. Please try again later.');\r\n                    }\r\n                } else {\r\n                    // no user found with email\r\n                    console.log(\"in else\");\r\n                    setMessage('No account found with that email. Please try again.');\r\n                }\r\n            } catch (error) {\r\n                console.log(\"ERROR:\", error);\r\n                setMessage('An error occurred. Please try again later.');\r\n            }\r\n            // reset input\r\n            setEmail('');\r\n        } else {\r\n            // invalid email message\r\n            setMessage('Invalid email format. Please enter a valid email address.');\r\n        }\r\n    };\r\n    \r\n\r\n    return (\r\n        <div className=\"w-screen h-screen bg-teal-800 flex flex-col items-center justify-center\">\r\n            <div className=\"flex items-center justify-center\">\r\n                <img src=\"logo.png\" alt=\"Logo\" className=\"w-28 h-28\" />\r\n                <h1 className=\"text-white text-7xl font-extrabold ml-2 uppercase leading-tight\">Money Master</h1>\r\n            </div>\r\n\r\n            <div className=\"w-full max-w-md mt-8 px-8 py-6 rounded-lg border-2 border-white flex flex-col items-center\">\r\n                <span className=\"text-white font-bold text-3xl uppercase mb-6\">Forgot Password</span>\r\n\r\n                <p className=\"text-white mb-6\">Enter your email, and we'll send you a verification code you can use to get back in your account.</p>\r\n                \r\n                <input\r\n                    type=\"text\"\r\n                    id=\"verificationCode\"\r\n                    className=\"w-full mb-4 px-3 py-2 bg-transparent text-white border border-white rounded focus:outline-none focus:border-gray-300\"\r\n                    placeholder=\"Enter email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                \r\n                <button \r\n                    onClick={submitText}\r\n                    className=\"w-full bg-white text-teal-800 font-semibold py-2 px-4 rounded hover:bg-gray-200 mb-4\"\r\n                >\r\n                    Submit\r\n                </button>\r\n                \r\n                {message && <div className={`mt-4 py-2 px-6 ${message.startsWith('No account') || message.startsWith('Invalid email') ? 'bg-red-100 text-red-700' : 'bg-green-100 text-green-700'} rounded border`}>{message}</div>}\r\n\r\n                <p className=\"text-white mt-6\">Don't have an account? <button onClick={() => { window.location.href = \"/register\" }} className='text-white underline font-semibold'>Register</button></p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForgotPw;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}